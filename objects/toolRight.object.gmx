<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sideRight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>NoneTooltoTool1 = false
Tool1toTool2 = false
Tool2toNoneTool = false
CanClickAgain = true
Ruch1 = false
Ruch2 = false
Ruch3 = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if NoneTooltoTool1 = true
{

with (NoneTool)
{
if distance_to_point(-126, 255) &gt; 1
{
move_towards_point( -126, 255, 20 )
}
if distance_to_point(-126, 255) &lt; 1
{
move_towards_point( -126, 255, 0 )
}
}

instance_create(760,255,Tool1)


with (Tool1)
{
if distance_to_point(250,255)&gt; 1
{
move_towards_point(pointOfNoReturn2.x, pointOfNoReturn2.y, 20 )
}
if distance_to_point(250,255)&lt; 1
{
move_towards_point( pointOfNoReturn2.x, pointOfNoReturn2.y, 0 )

}
}
NoneTooltoTool1 = false
Ruch1 = true

}
if  Ruch1 = true
{

with (NoneTool)
{

if distance_to_point(-126, 255) &lt; 1
{
move_towards_point( -126, 255, 0 )
instance_destroy()
}
}



with (Tool1)
{

if distance_to_point(250,255)&lt; 1
{
move_towards_point( pointOfNoReturn2.x, pointOfNoReturn2.y, 0 )
instance_create(Tool1.x,Tool1.y,Tool1Copy)
instance_destroy()
with (toolRight)
{
CanClickAgain = true
}
with (toolLeft)
{
CanClickAgain = true
}
}
}

}







//switch Tool1 to Tool2

if Tool1toTool2 = true
{

with (Tool1Copy)
{
if distance_to_point(-126, 255) &gt; 1 

{
move_towards_point( -126, 255, 20 )
}
if distance_to_point(-126, 255) &lt; 1
{
move_towards_point( -126, 255, 0 )
}
}

instance_create(760,255,Tool2)


with (Tool2)
{
if distance_to_point(250,255)&gt; 1
{
move_towards_point(pointOfNoReturn2.x, pointOfNoReturn2.y, 20 )
}
if distance_to_point(250,255)&lt; 1
{
move_towards_point( pointOfNoReturn2.x, pointOfNoReturn2.y, 0 )

}
}
Ruch2 = true
Tool1toTool2 = false
}
if Ruch2 = true
{

with (Tool1Copy)
{

if distance_to_point(-126, 255) &lt; 1
{
move_towards_point( -126, 255, 0 )
instance_destroy()
}
}



with (Tool2)
{

if distance_to_point(250,255)&lt; 1
{
move_towards_point( pointOfNoReturn2.x, pointOfNoReturn2.y, 0 )
instance_create(Tool2.x,Tool2.y,Tool2Copy)
instance_destroy()
with (toolRight)
{
CanClickAgain = true
}
with (toolLeft)
{
CanClickAgain = true
}
}
}
}



//switch Tool2 to NoneTool

if Tool2toNoneTool = true
{

with (Tool2Copy)
{
if distance_to_point(-126, 255) &gt; 1 

{
move_towards_point( -126, 255, 20 )
}
if distance_to_point(-126, 255) &lt; 1
{
move_towards_point( -126, 255, 0 )
}
}

instance_create(760,255,NoneToolCopy)


with (NoneToolCopy)
{
if distance_to_point(250,255)&gt; 1
{
move_towards_point(pointOfNoReturn2.x, pointOfNoReturn2.y, 20 )
}
if distance_to_point(250,255)&lt; 1
{
move_towards_point( pointOfNoReturn2.x, pointOfNoReturn2.y, 0 )

}
}
Ruch3 = true
Tool2toNoneTool = false
}
if Ruch3 = true
{

with (Tool2Copy)
{

if distance_to_point(-126, 255) &lt; 1
{
move_towards_point( -126, 255, 0 )
instance_destroy()
}
}



with (NoneToolCopy)
{

if distance_to_point(250,255)&lt; 1
{
move_towards_point( pointOfNoReturn2.x, pointOfNoReturn2.y, 0 )
instance_create(NoneToolCopy.x,NoneToolCopy.y,NoneTool)
instance_destroy()
with (toolRight)
{
CanClickAgain = true
}
with (toolLeft)
{
CanClickAgain = true
}
}
}
}












</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_clear(mb_left)

if global.t=0 and CanClickAgain = true
{
NoneTooltoTool1 = true
CanClickAgain = false
global.t = 1

}

if global.t=1 and CanClickAgain = true
{
Tool1toTool2 = true
CanClickAgain = false
global.t = 2
}

if global.t=2 and CanClickAgain = true
{
Tool2toNoneTool = true
CanClickAgain = false
global.t = 0

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
