<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.OneTimeToolFever = false
{

global.feverMode = 0
}

if global.OneTimeToolFever = true
{

global.feverMode = 500
}



global.coinController = 0
global.CoinSpawner = 1
global.mouse3 = false;

global.seconds = 59;
global.minutes = 5;


global.hours = 0;
Feler = true;
global.OutOfTime = false




alarm[0] = 10


if global.t = 6 {

if global.BoughtTimer_10 = true
{
global.seconds = 09;
global.minutes = 3;
if global.r=9
{
global.seconds = 19;
global.minutes = 3;
}

}

if global.BoughtTimer_20 = true
{
global.seconds = 19;
global.minutes = 3;
if global.r=9
{
global.seconds = 49;
global.minutes = 3;
}
}

if global.BoughtTimer_30 = true
{
global.seconds = 29;
global.minutes = 3;
if global.r=9
{
global.seconds = 59;
global.minutes = 3;
}
}

if global.BoughtTimer_40 = true
{
global.seconds = 39;
global.minutes = 3;
if global.r=9
{
global.seconds = 19;
global.minutes = 4;
}
}

if global.BoughtTimer_50 = true
{
global.seconds = 49;
global.minutes = 3;
if global.r=9
{
global.seconds = 39;
global.minutes = 4;
}
}

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fever mode ink
if global.feverMode &lt;500 and global.feverMode &gt;=351
{

global.CoinSpawner = 3

}

if global.feverMode &lt;350 and global.feverMode &gt;=176
{

global.CoinSpawner = 2

}

if global.feverMode &lt;175 and global.feverMode &gt;=2
{

global.CoinSpawner = 1

}
else if global.feverMode &lt; 2
{
global.feverMode = 1
global.CoinSpawner = 1

}

else if global.feverMode &gt;= 500

{
with GPS2
{
if distance_to_object(coin)&lt;1000 and distance_to_object(coin)&gt;-1000
with coin
{
move_towards_point( GPS2.x, GPS2.y, 80 )
}

//dzieje sie cos ekstra/fever mode
global.feverMode = 500

}
}

alarm[0] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = GPS.x
y = GPS.y
//global.seconds += 1/room_speed;

//if (global.seconds&lt;60) and (global.seconds&gt;59.9) {
//global.seconds = 0
//global.minutes += 1
//}

//if (global.minutes = 60) {
//global.minutes = 0
//global.hours +=1
//}

// 
if global.Stopper = false {

if (Feler=true){
global.seconds -= 1/room_speed;
}



if (global.seconds = 0) and (global.minutes != 0){
global.seconds = 59
global.minutes -= 1
}

if (global.seconds &gt; 0.1) and (global.seconds &lt; 1) and (global.minutes = 0){
Feler = false;
global.OutOfTime = true;
}


if (global.minutes = 0) and (global.hours != 0){
global.minutes = 59
global.hours -=1
}
if (global.minutes = 0) and (global.minutes = 0){
global.minutes = 0
}

if (Feler = false){
global.seconds = 0
}

if (global.OutOfTime = true)
{
instance_deactivate_object(player)
instance_deactivate_object(Player2)
instance_deactivate_object(Player3)
instance_deactivate_object(Player4)
instance_deactivate_object(Player5)
instance_deactivate_object(Player6)
instance_deactivate_object(Player7)
instance_deactivate_object(Player8)
instance_deactivate_object(Player9)
instance_create(view_xview[0]+239,view_yview[0]+192,NeedMoreTime)
instance_create(view_xview[0]+367,view_yview[0]+207,ConfirmNeedMoreTime)
instance_create(view_xview[0]+497,view_yview[0]+372,cancelNeedMoreTime)

instance_create(view_xview[0]+239,view_yview[0]+258,NeedMoreTime2)
instance_create(view_xview[0]+367,view_yview[0]+274,ConfirmNeedMoreTime2)

with (Waluta){
visible = false}
global.OutOfTime = false
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// fever mode dla drawing GM



with player
{
if place_meeting(x,y+2,ground)
global.feverMode -=0.2
else if !place_meeting(x,y,ground)
global.feverMode +=0.2
}

with Player2
{
if place_meeting(x,y+2,ground)
global.feverMode -=0.2
else if !place_meeting(x,y,ground)
global.feverMode +=0.2
}

with Player3
{
if place_meeting(x,y+2,ground)
global.feverMode -=0.2
else if !place_meeting(x,y,ground)
global.feverMode +=0.2
}

with Player4
{
if place_meeting(x,y+2,ground)
global.feverMode -=0.2
else if !place_meeting(x,y,ground)
global.feverMode +=0.2
}

with Player5
{
if place_meeting(x,y+2,ground)
global.feverMode -=0.2
else if !place_meeting(x,y,ground)
global.feverMode +=0.2
}

with Player6
{
if place_meeting(x,y+2,ground)
global.feverMode -=0.2
else if !place_meeting(x,y,ground)
global.feverMode +=0.2
}

with Player7
{
if place_meeting(x,y+2,ground)
global.feverMode -=0.2
else if !place_meeting(x,y,ground)
global.feverMode +=0.2
}

with Player8
{
if place_meeting(x,y+2,ground)
global.feverMode -=0.2
else if !place_meeting(x,y,ground)
global.feverMode +=0.2
}

with Player9
{
if place_meeting(x,y+2,ground)
global.feverMode -=0.2
else if !place_meeting(x,y,ground)
global.feverMode +=0.2
}

if global.feverMode &lt; 0
{
global.feverMode = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
/// draw timer
draw_set_colour(c_white);
draw_set_valign(fa_middle);
draw_set_halign(fa_middle);
var drawSec 
drawSec = floor(global.seconds)

draw_sprite_ext(sprite97,0,view_xview[0]+(700*global.zoom),view_yview[0]+(32*global.zoom),0.8*global.zoom,0.8*global.zoom,0,c_white,1)

if (global.hours &lt; 10) and (global.minutes &lt; 10) and (drawSec &lt; 10) {
draw_text_outline(view_xview[0]+(700*global.zoom),view_yview[0]+(32*global.zoom), "0" +string(global.hours) + ":0" + string(global.minutes) + ":0" + string(drawSec),1,c_black,10)
}
else if 
(global.hours &lt; 10) and (global.minutes &lt; 10)  {
draw_text_outline(view_xview[0]+(700*global.zoom),view_yview[0]+(32*global.zoom), "0" +string(global.hours) + ":0" + string(global.minutes) + ":" + string(drawSec),1,c_black,10)
}
else if 
(global.hours &lt; 10) and (drawSec &lt; 10)  {
draw_text_outline(view_xview[0]+(700*global.zoom),view_yview[0]+(32*global.zoom), "0" +string(global.hours) + ":" + string(global.minutes) + ":0" + string(drawSec),1,c_black,10)
}
else if 
(global.minutes&lt; 10) and (drawSec &lt; 10)  {
draw_text_outline(view_xview[0]+(700*global.zoom),view_yview[0]+(32*global.zoom), string(global.hours) + ":" + string(global.minutes) + ":0" + string(drawSec),1,c_black,10)
}
else if 
(global.hours&lt; 10)  {
draw_text_outline(view_xview[0]+(700*global.zoom),view_yview[0]+(32*global.zoom), "0" + string(global.hours) + ":" + string(global.minutes) + ":" + string(drawSec),1,c_black,10)
}
else if 
(global.minutes&lt; 10)   {
draw_text_outline(view_xview[0]+(700*global.zoom),view_yview[0]+(32*global.zoom), string(global.hours) + ":0" + string(global.minutes) + ":" + string(drawSec),1,c_black,10)
}
else if 
 (drawSec &lt; 10)  {
draw_text_outline(view_xview[0]+(700*global.zoom),view_yview[0]+(32*global.zoom), string(global.hours) + ":" + string(global.minutes) + ":0" + string(drawSec),1,c_black,10)
}
else
 {
draw_text_outline(view_xview[0]+(700*global.zoom),view_yview[0]+(32*global.zoom), string(global.hours) + ":" + string(global.minutes) + ":" + string(drawSec),1,c_black,10)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw ink contener
if global.rm = 1 {
draw_roundrect_texture(view_xview[0]+(220*global.zoom), view_yview[0]+(15*global.zoom), view_xview[0]+((220+(global.paintNMax/2) + 10)*global.zoom), view_yview[0]+(45*global.zoom), 5, background5, 9, false)
draw_rectangle_color(view_xview[0]+(global.zoom*230), view_yview[0]+(global.zoom*20), view_xview[0]+((230+(global.paintN/2))*global.zoom), view_yview[0]+(global.zoom*40), c_black, c_black, c_black, c_black, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
