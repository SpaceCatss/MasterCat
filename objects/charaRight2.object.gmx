<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sideRight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>P2toP3 = false

CanClickAgain = true
Ruch2 = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


//switch p2 to p3

if P2toP3 = true
{

with (P2)
{
if distance_to_point(-126, 160) &gt; 1 and  distance_to_point(pointOfNoReturn.x, pointOfNoReturn.y) &lt;1
{
move_towards_point( -126, 160, 20 )
}
if distance_to_point(-126, 160) &lt; 1
{
move_towards_point( -126, 160, 0 )
}
}

instance_create(760,160,P3)


with (P3)
{
if distance_to_point(250, 160) &gt; 1
{
move_towards_point(pointOfNoReturn.x, pointOfNoReturn.y, 20 )
}
if distance_to_point(250, 160) &lt; 1
{
move_towards_point( pointOfNoReturn.x, pointOfNoReturn.y, 0 )

}
}
Ruch2 = true
P2toP3 = false
}
if Ruch2 = true
{

with (P2)
{

if distance_to_point(-126, 160) &lt; 1
{
move_towards_point( -126, 160, 0 )
instance_destroy()
}
}



with (P3)
{

if distance_to_point(250, 160) &lt; 1
{
move_towards_point( pointOfNoReturn.x, pointOfNoReturn.y, 0 )
with (charaRight)
{
CanClickAgain = true
}
}
}
}








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_clear(mb_left)

if global.r=2 and CanClickAgain = true
{
P1toP2 = true
CanClickAgain = false
global.r = 3
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
