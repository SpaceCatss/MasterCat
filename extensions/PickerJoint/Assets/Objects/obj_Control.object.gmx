<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step

// Control object for handle user actions

// check first the picker is not already
// it's important to checking before mouse left press check, 
// because if already have a picker the mouse left press used to pick
if (gv_PickerObject == noone) {
  if mouse_check_button_pressed(mb_left) {
    // ok, create picker and store in global variable
    gv_PickerObject = instance_create(mouse_x, mouse_y, obj_Picker);
    exit;
  };  
};

if mouse_check_button_released(mb_left) {
  // check have a picker already
  if (gv_PickerObject &lt;&gt; noone) {
    // yes, destroy them
    with gv_PickerObject {
      instance_destroy();
    };  
    exit;
  };  
};

if mouse_check_button_pressed(mb_right) {
  with (obj_Borders) {
    // check point is inside the borders
    if point_in_rectangle(mouse_x, mouse_y, iv_Left, iv_Top, iv_Right, iv_Bottom) {
      // ok, create pickable dynamic item
      instance_create(mouse_x, mouse_y, obj_Dynamic);
    };  
  };
};

// exit from program
if keyboard_check_pressed(vk_escape) {
  game_end();
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// just draw info text

draw_text(20, 20, 
"- Press right mouse button to make dynamic item#
- Press and hold left mouse button to pick item#
- Move mouse to drag picked item#
- Release left button to drop item");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
