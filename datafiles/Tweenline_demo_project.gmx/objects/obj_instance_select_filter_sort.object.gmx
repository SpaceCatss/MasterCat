<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TO VIEW THE EXAMPLE, SEE THE STEP EVENT

// Creates the "Tween" button.
button_tween = bb_create(x, y, "Tween", 30, font_lato, spr_button_orange, true);

// Sets the text colour of the button to c_white and the text alpha to 0.88
bb_set_color(button_tween, c_white, .88);

// Sets the width of the button to 200px (the default is autosize mode)
bb_set_width(button_tween, 200);




// Sets the variable tween to -1. (check the step event for more info)
tween_arr = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
bb_step(button_tween);

if (bb_on_pressed(button_tween)) { // When the button is pressed (lazy event)

    // If any tween exists, stop it (revert to the original state)
    tween_stop(tween_arr);
    // And then, delete it.
    tween_destroy(tween_arr);
    
    // Tween all instances to the left of the yellow box, sorted by "y"
    
    // First create an array with obj_box_small1 and obj_box_small3 objects's ids.
    var inst = array(obj_box_small1,obj_box_small3);
    
    // Then, pass the array, and filter each instance by the x position (set_x SETTER)
    // It has to be less than ("&lt;")
    // the value of the x position of the yellow box (obj_box_small2.x)
    // Then, sort the result by the y position value of each box in ascending (set_y SETTER)
    var arr = instance_select_filter_sort(inst, set_x, "&lt;", obj_box_small2.x,set_y);
    
    // Finally, you can stagger all instances: (grouped by waves of 10 instances)
    tween_arr = tween_stagger_to(arr, 2, array("angle",360,"blend",c_red), .5, 10); 
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bb_draw(button_tween);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
