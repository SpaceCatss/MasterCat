<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This makes the object a singleton instance. Check the script for more info
if (singleton()) {exit;}



// Inits the antialias system (not needed for the demo)
draw_aa_init();

// Set Game Maker GUI size
display_set_gui_size(room_width, room_height);

//////// CREATES THE "PREVIOUS" AND "NEXT" BUTTONS


bar_height = 60; 

var marginW = 25, marginH = 15, xx = marginW, yy = room_height - bar_height + marginH, size = 20, button_w = 120;

button_prev = bb_create( xx, yy, "Previous", size, font_lato, spr_button_orange, true);
bb_set_width(button_prev, button_w);
bb_set_height(button_prev, bar_height-marginH-marginH);
bb_set_color(button_prev, c_white,.88);

xx+=button_w+marginW;
button_next = bb_create( xx, yy, "Next", size, font_lato, spr_button_orange, true);
bb_set_width(button_next, button_w);
bb_set_height(button_next, bar_height-marginH-marginH);
bb_set_color(button_next, c_white,.88);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Perform the step events of the buttons

bb_step(button_prev);
bb_step(button_next);


if (bb_on_pressed(button_prev) || keyboard_check_pressed(vk_left)) { 
    /// Go to the previous room
    if(room_first == room) {
        room_goto(room_last);
    } else {
        room_goto_previous();
    }
} 

if (bb_on_pressed(button_next) || keyboard_check_pressed(vk_right)) {
    /// Go to the next room
    if(room_last == room) {
        room_goto(room_first);
    } else {
        room_goto_next();
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the bottom bar, the buttons and the tweenline logo

draw_set_color(c_black);
draw_set_alpha(.3);
draw_rectangle(0,room_height-bar_height, room_width,room_height, false);

draw_set_alpha(1);
bb_draw(button_prev);
bb_draw(button_next);


draw_set_alpha(.5);
draw_set_color(c_white);
var xx = bb_get_x(button_next)+bb_get_width(button_next)+30;
var yy = bb_get_y(button_next)+bb_get_height(button_next)/2;
var str = "Page "+string(room-room_first+1)+" of "+string(room_last-room_first+1);
draw_set_valign(fa_middle);
draw_set_halign(fa_left);
draw_text_transformed(xx, yy, str, .4,.4,0);

draw_set_alpha(1);
var ww = sprite_get_width(spr_tweenline_logo);
var hh = sprite_get_height(spr_tweenline_logo);
draw_sprite(spr_tweenline_logo, 0, room_width-ww-30,room_height-bar_height+((bar_height-hh)/2));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///game_end();

game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go to the next room
if(room_last == room) {
    room_goto(room_first);
} else {
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
