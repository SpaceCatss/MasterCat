<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CUSTOM VARS EXAMPLE
/*

&gt; What are custom vars? 
    Custom vars are variables for your game maker objects, that can be created or destroyed dinamically at runtime.
    
    Custom vars are a bit slower than normal variables, so use only when you need a lazy way to create a variable.
    The principal adventages of custom vars are:
    
        =&gt; You can use cv_has([object=id,] var) to check if the specified object has the customvar "var" defined. 
        
        =&gt; You can use cv_get([object=id,] var) to get the customvar of an object, and if it does not exists, the 
        function will return undefined. If you use normal variables, you probably get a compiller error. 
        
        =&gt; Other functions you can use are cv_set, cv_delete and cv_clear_object.
    
&gt; How do I define a custom var?
    Simply do:
    cv_set("_mycustomvar", 300);
    This will define _mycustomvar inside the current instance and set its value to 300.
    
    You can also do this to define _mycustomvar in a diferent object:
    cv_set(obj_box1, "_mycustomvar", 300);
    This will define _mycustomvar inside all the obj_box1 instances and set their value to 300.

&gt; How do I change the value of a custom var?
    In the same way, you can use cv_set to override the value of that custom var. If the custom var does not exists 
    in the object, it will be created; if not, the value will be changed.
    
&gt; How do I get the value of a customvar?
    // This will get the value of _mycustomvar inside the current instance:
    var myvalue1 = cv_get("_mycustomvar"); 
    // This will get the value of _mycustomvar inside obj_box1:
    var myvalue2 = cv_set(obj_box1, "_mycustomvar"); 
    
        
&gt; But what is the relation of this with the Tweenline Engine?
    Tweenline integrates the use of custom vars. You can pass a string starting with "_" (underscore) to tell the
    system that the following value in the array will correspond with the custom var specified. 
    For Example:
    
        tween_to( id, 3, array("_mycustomvar",x+600));
        
    This, will tween the custom var "_mycustomvar" inside the current instance, from the current value to x+600.
    If the custom var "_mycustomvar" is not defined in the current instance, the It's defined and the value is set to zero.
    

ENJOY!! 

    
*/

// Sets the custom var "_mycustomvar" to 300 inside the current instance
cv_set("_mycustomvar", 300);


// Tweens "_mycustomvar" from the current value (300) to the value x+600 in 3 seconds with "patrol" mode on. 
tween = tween_to( id, 3, array("patrol",true, "_mycustomvar",x+600, "_othercustomvar", 1));

// This script inits the visual timeline system that shows in the bottom of the screen 
playhead = tl_playhead_create(tween);

// IMPORTANT! Please read now the STEP event!!! 
// IN the step event:
// The value of the x position of obj_box2 is setted to the current value of _mycustomvar
// obj_box2.x = cv_get("_mycustomvar");


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// READ FIRST THE CREATE EVENT

// Step event of the visual playhead
tl_playhead_step(playhead);

// IMPORTANT! The value of the x position of obj_box2 is 
// setted to the current value of _mycustomvar
obj_box2.x = cv_get("_mycustomvar");

// And the same with the alpha
obj_box2.image_alpha = cv_get("_othercustomvar");




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// READ FIRST THE CREATE EVENT

// Draws the visual playhead
tl_playhead_draw(playhead);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
