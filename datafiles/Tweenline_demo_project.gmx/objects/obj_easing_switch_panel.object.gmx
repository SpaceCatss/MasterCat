<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
sel =0;
hor =0;
name ="ease_linear";

// (eases[sel])[hor] 
eases = array(
    array(ease_linear),
    array(ease_quadin,  ease_quadout,  ease_quadinout),
    array(ease_cubicin, ease_cubicout, ease_cubicinout),
    array(ease_quartin, ease_quartout, ease_quartinout),
    array(ease_quintin, ease_quintout, ease_quintinout),
    array(ease_sinein,  ease_sineout,  ease_sineinout),
    array(ease_expoin,  ease_expoout,  ease_expoinout),
    array(ease_circin,  ease_circout,  ease_circinout),
    array(ease_bouncein,ease_bounceout,ease_bounceinout),
    array(ease_backin,  ease_backout,  ease_backinout),
    array(ease_powin,   ease_powout,   ease_powinout),
    array(ease_elasticin,ease_elasticout,ease_elasticinout),
    array(ease_slowmotion)
);


var xxx = x, yyy = y;
button_prev = bb_create(xxx, yyy, "Prev", 20, font_lato, spr_button_orange, true);
bb_set_width(button_prev,100);
bb_set_color(button_prev,c_white,.88);

text_page = instance_create(xxx+200,yyy+20,obj_draw_text);
text_page.halign = fa_center;
button_next = bb_create(xxx+300, yyy, "Next", 20, font_lato, spr_button_orange, true);
bb_set_width(button_next,100);
bb_set_color(button_next,c_white,.88);

options_x = xxx;
options_y = yyy+50;
options_w = 400


buttons_arr[0] = undefined; // init buttons array.
event_user(0); //Recreate the buttons



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bb_step(button_next);
bb_step(button_prev);

for (var i=0, s=array_length_1d(buttons_arr); i&lt;s; i++) {
    // update all buttons
    bb_step(buttons_arr[i]);
}


var chan = false;
if (bb_on_pressed(button_prev)) {
    sel -=1;
    if (sel&lt;0) {
        sel=array_length_1d(eases)-1;
    }
    hor =clamp(hor,0,array_length_1d(eases[sel])-1);
    event_user(0); // Recreate buttons 
}
if (bb_on_pressed(button_next)) {
    sel +=1;
    if (sel&gt;=array_length_1d(eases)) {
        sel=0;
    }
    hor =clamp(hor,0,array_length_1d(eases[sel])-1);
    event_user(0); // Recreate buttons 
}

for (var i=0, s=array_length_1d(buttons_arr); i&lt;s; i++) {
    if (bb_on_pressed(buttons_arr[i])) {
        hor = i;
        event_user(1); // Apply easing
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Apply easing

var arr = array_nested_get(eases,sel,hor);
name = script_get_name(arr);
tween_set_ease(obj_easing_example.tween,arr);

for (var i=0, s=array_length_1d(buttons_arr); i&lt;s; i++) {
    bb_set_active(buttons_arr[i], (hor == i));
}

(obj_easing_example.top_text).str="tween = tween_to(obj_e, 2, array('ease',"+name+", 'x',800, 'angle',360, 'patrol',true));"


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Recreate Buttons

buttons_arr=-1;

hor = clamp(hor, 0, array_length_1d(eases[sel])-1);

var y_sep = 50;

for (var i=0, s=array_length_1d(eases[sel]); i&lt;s; i++) {
    var script = array_nested_get(eases, sel, i);
    var str = "tween_set_ease( tween, "+script_get_name(script)+" );";
    buttons_arr[i] = bb_create(options_x, options_y + i*y_sep,str , 20, font_lato, spr_button_orange, true);
    bb_set_toggle(buttons_arr[i], true);
    bb_set_width(buttons_arr[i], options_w);
    bb_set_color(buttons_arr[i],c_white,.88);
}

text_page.str = "Page "+string(sel+1)+"/"+string(array_length_1d(eases));

event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw event

bb_draw(button_next);
bb_draw(button_prev);

for (var i=0, s=array_length_1d(buttons_arr); i&lt;s; i++) {
    // draw all buttons in the list
    bb_draw(buttons_arr[i]);
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
