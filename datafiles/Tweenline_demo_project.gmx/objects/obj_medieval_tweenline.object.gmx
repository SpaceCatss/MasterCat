<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// creates a tweenline
tweenline = tweenline_create();

// set initial conditions of the smoke
tween_set( obj_smoke,array("scale",0));

// tween fog 
tweenline_to( obj_fog, 2, array("ease",ease_linear, "x",obj_fog.x-30,"y",obj_fog.y+30,"alpha",0));

// tween shield 
tweenline_from( obj_medieval_shield, 1, array("scale",0,"angle",-200,"ease",ease_backout), .5);

// tween logo IN (add tween to the end of the last tween)
tweenline_from( obj_medieval_logo, 1, array("ease",ease_quadin, "scale",3,"alpha",0),"_end-=1");

// tween smoke from the impact of the logo (add at 0.6 seconds before the end of the last tween)
tweenline_to( obj_smoke, 3, array("xscale",3, "yscale",1.5, "alpha",0, "ease",ease_expoout),"_end-=.1");

// add a label "shieldend" to the end of the end's tween (end of the tweenline at the moment)
tweenline_add("shieldend", "_end");

// tween logo OUT (2 seconds after the end of the tweeeline at the moment)
tweenline_to( obj_medieval_logo, 1, array("ease",ease_backin, "scale",0,"alpha",0),"+=2");

// tween shield OUT
tweenline_to( obj_medieval_shield, 1, array("scale",0,"angle",200,"ease",ease_backin),"-=.7");



/// END OF TWEENLINE ANIMATION ////////// 

// Creates the visual playhead control of the bottom of the screen and pass the tweenline as argument
playhead = tl_playhead_create(tweenline);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tl_playhead_step(playhead);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Playhead
tl_playhead_draw(playhead);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
